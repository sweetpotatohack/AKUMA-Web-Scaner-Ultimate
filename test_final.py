#!/usr/bin/env python3
import requests
import time

def test_system():
    print("üî• AKUMA Web Scanner - –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: API Health
    print("1Ô∏è‚É£ –¢–µ—Å—Ç API...")
    try:
        health = requests.get("http://localhost:8000/health", timeout=5)
        print(f"   ‚úÖ API Health: {health.status_code}")
        print(f"   üìù Response: {health.json()}")
    except Exception as e:
        print(f"   ‚ùå API Error: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: Frontend
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç Frontend...")
    try:
        frontend = requests.get("http://localhost:3000", timeout=5)
        print(f"   ‚úÖ Frontend: {frontend.status_code}")
    except Exception as e:
        print(f"   ‚ùå Frontend Error: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫–∞–Ω–∞
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫–∞–Ω–∞...")
    try:
        scan_data = {"target": "httpbin.org", "scan_type": "basic"}
        response = requests.post("http://localhost:8000/scans", json=scan_data, timeout=10)
        print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫–∞–Ω–∞: {response.status_code}")
        
        if response.status_code == 201:
            scan = response.json()
            scan_id = scan['id']
            print(f"   üìù Scan ID: {scan_id[:8]}...")
            print(f"   üéØ Target: {scan['target']}")
            print(f"   üìä Status: {scan['status']}")
            
            # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            print("\n4Ô∏è‚É£ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞...")
            for i in range(4):
                time.sleep(3)
                scan_check = requests.get(f"http://localhost:8000/scans/{scan_id}", timeout=5)
                if scan_check.status_code == 200:
                    scan_data = scan_check.json()
                    progress = scan_data.get('progress', 0)
                    status = scan_data.get('status', 'unknown')
                    print(f"   üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress}% - {status}")
                    
                    if status == 'completed':
                        results = scan_data.get('results', {})
                        print(f"   üéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ! –£—è–∑–≤–∏–º–æ—Å—Ç–∏: {results.get('vulnerabilities', 0)}")
                        break
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {response.text}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå Scan Error: {e}")
        return False
    
    # –¢–µ—Å—Ç 5: –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–∫–∞–Ω–æ–≤
    print("\n5Ô∏è‚É£ –¢–µ—Å—Ç —Å–ø–∏—Å–∫–∞ —Å–∫–∞–Ω–æ–≤...")
    try:
        scans = requests.get("http://localhost:8000/scans", timeout=5)
        print(f"   ‚úÖ –°–ø–∏—Å–æ–∫ —Å–∫–∞–Ω–æ–≤: {scans.status_code}")
        scans_data = scans.json()
        print(f"   üìä –í—Å–µ–≥–æ —Å–∫–∞–Ω–æ–≤: {len(scans_data)}")
        
        completed = sum(1 for s in scans_data if s.get('status') == 'completed')
        print(f"   ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö: {completed}")
        
    except Exception as e:
        print(f"   ‚ùå List Error: {e}")
    
    print(f"\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    print(f"‚úÖ Backend API: http://localhost:8000")
    print(f"üåê Frontend: http://localhost:3000")
    print(f"üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    
    return True

if __name__ == "__main__":
    test_system()
