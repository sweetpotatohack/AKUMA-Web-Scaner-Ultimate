#!/bin/bash

echo "üöÄ Starting AKUMA Web Scanner..."
echo "================================="

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /root/AKUMA_Web_Scanner

# –£–±–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—Å–ª–∏ –µ—Å—Ç—å
echo "üîÑ Cleaning up old processes..."
pkill -f uvicorn 2>/dev/null
pkill -f "react-scripts" 2>/dev/null
sleep 2

# –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫–µ–Ω–¥
echo "üîß Starting backend server..."
nohup python3 -m uvicorn backend.app:app --host 0.0.0.0 --port 8001 > backend.log 2>&1 &
BACKEND_PID=$!

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞
echo "‚è≥ Waiting for backend to start..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ç–∫–µ–Ω–¥
if curl -s http://localhost:8001/api/stats > /dev/null; then
    echo "‚úÖ Backend started successfully on port 8001"
else
    echo "‚ùå Backend failed to start"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
echo "üåê Starting frontend server..."
cd frontend
nohup npm start > ../frontend.log 2>&1 &
FRONTEND_PID=$!

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo "‚è≥ Waiting for frontend to start..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
if curl -s http://localhost:3000 | grep -q "AKUMA"; then
    echo "‚úÖ Frontend started successfully on port 3000"
else
    echo "‚ùå Frontend failed to start"
fi

echo ""
echo "üéØ AKUMA Scanner is now running!"
echo "================================="
echo "üìä Dashboard: http://localhost:3000/dashboard"
echo "üõ°Ô∏è Vulnerabilities: http://localhost:3000/vulnerabilities"
echo "üìã Reports: http://localhost:3000/reports"
echo "‚öôÔ∏è Config: http://localhost:3000/config"
echo "üîç API Docs: http://localhost:8001/docs"
echo ""
echo "Backend PID: $BACKEND_PID"
echo "Frontend PID: $FRONTEND_PID"
echo ""
echo "To stop: pkill -f uvicorn && pkill -f react-scripts"
echo "Logs: backend.log and frontend.log"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
echo ""
echo "üìà Current Status:"
curl -s http://localhost:8001/api/stats | python3 -c "
import sys, json
try:
    data = json.load(sys.stdin)
    print(f'   Total Scans: {data.get(\"total_scans\", 0)}')
    print(f'   Active Scans: {data.get(\"active_scans\", 0)}')
    print(f'   Vulnerabilities: {data.get(\"vulnerabilities_found\", 0)}')
    print(f'   Critical Issues: {data.get(\"critical_vulns\", 0)}')
except:
    print('   Status: Starting...')
"
