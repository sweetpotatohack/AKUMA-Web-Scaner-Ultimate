#!/bin/bash

echo "üè• AKUMA Scanner - Health Check"
echo "==============================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
if [ $(docker ps | grep akuma | wc -l) -eq 3 ]; then
    echo "‚úÖ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
else
    echo "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
    docker ps --format "table {{.Names}}\t{{.Status}}"
    exit 1
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API
echo "üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
if curl -s http://localhost:8000/health > /dev/null; then
    echo "‚úÖ Backend API –æ—Ç–≤–µ—á–∞–µ—Ç"
else
    echo "‚ùå Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend..."
if curl -s http://localhost:3000 > /dev/null; then
    echo "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis..."
if docker exec akuma_redis redis-cli ping | grep -q PONG; then
    echo "‚úÖ Redis —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

echo ""

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo "üìà –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
STATS=$(curl -s http://localhost:8000/api/stats)
echo "$STATS" | python3 -c "
import sys, json
try:
    data = json.loads(sys.stdin.read())
    print(f'  Total Scans: {data[\"total_scans\"]}')
    print(f'  Active Scans: {data[\"active_scans\"]}')
    print(f'  Vulnerabilities: {data[\"vulnerabilities_found\"]}')
    print(f'  Critical Issues: {data[\"critical_vulns\"]}')
except:
    print('  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É')
"

echo ""
echo "üéâ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!"
echo ""
echo "üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:"
echo "   Web UI: http://localhost:3000"
echo "   API: http://localhost:8000"
echo "   API Docs: http://localhost:8000/docs"
